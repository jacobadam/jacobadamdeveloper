{"version":3,"file":"static/js/436.6513bc2a.chunk.js","mappings":"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","sources":["Contact.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport emailjs from \"@emailjs/browser\";\n\nexport default function Contact() {\n  const form = useRef();\n  const [messageSent, setMessageSent] = useState(false);\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\"contact_service\", \"contact_form\", form.current, {\n        publicKey: \"ojNtN4lneN6w9tjlE\",\n      })\n      .then(\n        () => {\n          console.log(\"Success!\");\n          setMessageSent(true);\n          setTimeout(() => setMessageSent(false), 5000);\n        },\n        (error) => {\n          console.log(\"Failed...\", error.text);\n        }\n      );\n\n    e.target.reset();\n  };\n\n  return (\n    <section className=\"py-16 bg-slate-200 dark:bg-slate-900 flex-grow\">\n      <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid lg:grid-cols-2 grid-cols-1 gap-8 lg:items-start items-center lg:justify-start justify-center\">\n          <div className=\"flex flex-col items-center text-center px-4 sm:px-6\">\n            <h2 className=\"text-gray-900 dark:text-white text-2xl font-semibold leading-snug pb-5\">\n              Contact Us\n            </h2>\n            <p className=\"text-gray-900 dark:text-white text-md font-normal pb-6\">\n              This is your gateway to connect directly with me. Whether you have\n              inquiries, feedback, or just want to say hello.\n            </p>\n            <div className=\"py-6 border-t border-stone-300 text-center\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"rounded-lg p-3\">\n                  <img\n                    src=\"/email.svg\"\n                    alt=\"Email Icon\"\n                    className=\"w-6 h-6 object-contain dark:invert\"\n                  />\n                </div>\n                <div className=\"flex flex-col items-center w-full\">\n                  <h6 className=\"text-gray-900 dark:text-white text-sm font-medium\">\n                    Email\n                  </h6>\n                  <p className=\"text-gray-700 dark:text-white text-xs font-normal text-center\">\n                    jacobadamdeveloper@gmail.com\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-4 mt-8\">\n                <div className=\"rounded-lg p-3\">\n                  <img\n                    src=\"/phone.svg\"\n                    alt=\"Phone Icon\"\n                    className=\"w-6 h-6 object-contain dark:invert\"\n                  />\n                </div>\n                <div className=\"flex flex-col items-center w-full\">\n                  <h6 className=\"text-gray-900 dark:text-white text-sm font-medium\">\n                    Contact\n                  </h6>\n                  <p className=\"text-gray-700 dark:text-white text-xs font-normal text-center\">\n                    (+1) 236-885-4130\n                  </p>\n                </div>\n              </div>\n            </div>\n            {/* \n            <div className=\"flex justify-center items-center mb-10 mt-6\">\n              <a\n                href=\"https://www.linkedin.com/in/jacobnevitt/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"block text-gray-900 transition-all duration-50\"\n              >\n                <img\n                  src=\"/linkedin.svg\"\n                  alt=\"LinkedIn Logo\"\n                  className=\"w-8 h-8\"\n                />\n              </a>\n            </div> */}\n          </div>\n\n          <div className=\"p-4 rounded-lg\">\n            {messageSent && (\n              <p\n                className=\"text-center text-indigo-600 text-xl font-bold\"\n                aria-live=\"polite\"\n              >\n                Message sent!\n              </p>\n            )}\n            <form\n              className=\"space-y-4\"\n              ref={form}\n              onSubmit={sendEmail}\n              aria-labelledby=\"contact-form\"\n            >\n              <div>\n                <label\n                  htmlFor=\"name\"\n                  className=\"flex items-center mb-2 text-gray-900 dark:text-white\"\n                >\n                  Name{\" \"}\n                  <svg\n                    width=\"7\"\n                    height=\"7\"\n                    className=\"ml-1\"\n                    viewBox=\"0 0 7 7\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M3.11222 6.04545L3.20668 3.94744L1.43679 5.08594L0.894886 4.14134L2.77415 3.18182L0.894886 2.2223L1.43679 1.2777L3.20668 2.41619L3.11222 0.318182H4.19105L4.09659 2.41619L5.86648 1.2777L6.40838 2.2223L4.52912 3.18182L6.40838 4.14134L5.86648 5.08594L4.09659 3.94744L4.19105 6.04545H3.11222Z\"\n                      fill=\"#EF4444\"\n                    />\n                  </svg>\n                </label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  name=\"name\"\n                  required\n                  aria-required=\"true\"\n                  className=\"w-full border rounded-md px-4 py-2\"\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"email\"\n                  className=\"flex items-center mb-2 text-gray-900 dark:text-white\"\n                >\n                  Email{\" \"}\n                  <svg\n                    width=\"7\"\n                    height=\"7\"\n                    className=\"ml-1\"\n                    viewBox=\"0 0 7 7\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M3.11222 6.04545L3.20668 3.94744L1.43679 5.08594L0.894886 4.14134L2.77415 3.18182L0.894886 2.2223L1.43679 1.2777L3.20668 2.41619L3.11222 0.318182H4.19105L4.09659 2.41619L5.86648 1.2777L6.40838 2.2223L4.52912 3.18182L6.40838 4.14134L5.86648 5.08594L4.09659 3.94744L4.19105 6.04545H3.11222Z\"\n                      fill=\"#EF4444\"\n                    />\n                  </svg>\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  required\n                  className=\"w-full border rounded-md px-4 py-2\"\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"message\"\n                  className=\"flex items-center mb-2 text-gray-900 dark:text-white\"\n                >\n                  Message{\" \"}\n                  <svg\n                    width=\"7\"\n                    height=\"7\"\n                    className=\"ml-1\"\n                    viewBox=\"0 0 7 7\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M3.11222 6.04545L3.20668 3.94744L1.43679 5.08594L0.894886 4.14134L2.77415 3.18182L0.894886 2.2223L1.43679 1.2777L3.20668 2.41619L3.11222 0.318182H4.19105L4.09659 2.41619L5.86648 1.2777L6.40838 2.2223L4.52912 3.18182L6.40838 4.14134L5.86648 5.08594L4.09659 3.94744L4.19105 6.04545H3.11222Z\"\n                      fill=\"#EF4444\"\n                    />\n                  </svg>\n                </label>\n                <textarea\n                  id=\"message\"\n                  name=\"message\"\n                  type=\"text\"\n                  required\n                  rows=\"4\"\n                  className=\"w-full border rounded-md px-4 py-2\"\n                ></textarea>\n              </div>\n              <button\n                type=\"submit\"\n                value=\"Send\"\n                className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white py-2 rounded-md\"\n              >\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n"],"names":["Contact","form","useRef","messageSent","setMessageSent","useState","_jsx","className","children","_jsxs","src","alt","ref","onSubmit","e","preventDefault","emailjs","current","publicKey","then","console","log","setTimeout","error","text","target","reset","htmlFor","width","height","viewBox","fill","xmlns","d","id","type","name","required","rows","value","EmailJSResponseStatus","constructor","_status","arguments","length","undefined","_text","this","status","store","origin","blockHeadless","storageProvider","createWebStorage","localStorage","get","key","Promise","resolve","getItem","set","setItem","remove","removeItem","buildOptions","options","toString","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","headlessError","isBlockedValueInParams","params","list","watchVariable","isBlockListDisabled","validateBlockListParams","Array","isArray","FormData","getValue","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","validateLimitRateParams","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","init","opts","blockList","limitRate","send","templateParams","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","currentForm","document","querySelector","findHTMLForm","nodeName","validateForm","formData","append"],"sourceRoot":""}